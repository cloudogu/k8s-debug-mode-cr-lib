//go:build !ignore_autogenerated

/*
This file was generated with "make generate".
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugMode) DeepCopyInto(out *DebugMode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugMode.
func (in *DebugMode) DeepCopy() *DebugMode {
	if in == nil {
		return nil
	}
	out := new(DebugMode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DebugMode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugModeSpec) DeepCopyInto(out *DebugModeSpec) {
	*out = *in
	in.DeactivateTimestamp.DeepCopyInto(&out.DeactivateTimestamp)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugModeSpec.
func (in *DebugModeSpec) DeepCopy() *DebugModeSpec {
	if in == nil {
		return nil
	}
	out := new(DebugModeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugModeStatus) DeepCopyInto(out *DebugModeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugModeStatus.
func (in *DebugModeStatus) DeepCopy() *DebugModeStatus {
	if in == nil {
		return nil
	}
	out := new(DebugModeStatus)
	in.DeepCopyInto(out)
	return out
}
